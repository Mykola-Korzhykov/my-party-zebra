/* ---- Mixins ---- */
@use 'sass:math';

/* -- Transition -- */
@mixin transition($delay: $transition-delay) {
    transition: $transition-property $delay $transition-timing;
}

/* -- Link Hover -- */
@mixin link-hover($opacity: $link-hover-opacity) {
    opacity: $opacity;
    @include transition();
}

/* -- Fade -- */
@mixin fade($status) {
    @if $status == in {
        opacity: 1;
        pointer-events: visible;
    }

    @if $status == out {
        opacity: 0;
        pointer-events: none;
    }

    @include transition();
}

/* -- Background -- */
@mixin background($url) {
    background: url($url) no-repeat center top / cover;
}

/* -- Background Opacity -- */
@mixin background-opacity($color, $opacity) {
    background: $color !important;
    background: rgba($color, $opacity) !important;
}

/* -- Color Opacity -- */
@mixin color-opacity($color, $opacity) {
    color: $color;
    color: rgba($color, $opacity);
}

/* -- Selection -- */
@mixin selection {
    background: var(--theme-color);
	color: $white-1;
	text-shadow: none;
}

/* -- Flexible -- */
@mixin flexible {
    display: flex;
    align-items: center;
}

/* -- Full Stretch -- */
@mixin full-stretch {
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
}

/* -- Center Element -- */
@mixin center-element {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

/* -- Center All Content -- */
@mixin center-all-content {
	@include full-stretch();
	@include flexible();
	justify-content: center;
	text-align: center;
}

/* -- Reset Indents -- */
@mixin reset-indents {
    margin: 0;
    padding: 0;
}

/* -- Media Queries -- */
@mixin mq($size: "480" , $type: "<", $size-next: null) {
	@if ($type == ">") {
		@media (min-width: #{$size}px) {
			@content;
		}
	}

	@if ($type == "<") {
		@media (max-width: #{$size}px) {
			@content;
		}
	}

	@if ($type == "<>") {
		@media screen and (min-width: #{$size}px) and (max-width: #{$size-next}px) {
			@content;
		}
	}
}

/* -- Font -- */
@mixin font($font-name, $file-name, $weight, $style) {
	@font-face {
		font-family: $font-name;
		font-display: swap;
		src: url('/fonts/#{$file-name}.woff2') format('woff2'), url('/fonts/#{$file-name}.woff') format('woff');
		font-weight: #{$weight};
		font-style: #{$style};
	}
}

/* -- Create Gutter -- */
@mixin create-gutter($screen-width, $gutter: '') {
	@if($screen-width == 'default') {
		width: $container-default-width;
		margin: 0 auto;
	} @else {
		@include mq($screen-width) {
			$percent-gutter: percent($gutter, $screen-width);
			padding-left: $percent-gutter;
			padding-right: $percent-gutter;
			width: 100%;
			margin: 0;
		}
	}
}

/* -- Responsive Container -- */
@mixin responsive-container() {
	@include create-gutter('default');
	@include create-gutter($desktop, $container-desktop-gutter);
	@include create-gutter($laptop, $container-laptop-gutter);
	@include create-gutter($tablet-large, $container-tablet-large-gutter);
	@include create-gutter($tablet, $container-tablet-gutter);
	@include create-gutter($phablet, $container-phablet-gutter);
}

/* -- First Screen BG -- */
@mixin first-screen-bg() {
	$path: '/img/home/first-screen';
	background: url('#{$path}/background-desktop.png') no-repeat fixed top / contain;

	@include mq($tablet-large) {
		background-image: url('#{$path}/background-tablets.png');
	}

	@include mq($phablet) {
		background-image: url('#{$path}/background-mobile.png');
	}
}

/* -- Menu Top Calculate -- */
@mixin menu-top-calc() {
	$margin: 22px;

	top: calc(($header-padding-desktop-gutter * 2) + $margin);

    @include mq($tablet) {
        top: calc(($header-padding-tablet-gutter * 2) + $margin);
    }

    @include mq($phablet) {
        top: calc(($header-padding-phablet-gutter * 2) + $margin);
    }
}

@mixin menu-top-calc-minus() {
	top: calc(($header-padding-desktop-gutter * 2) * -1) + 4px;

    @include mq($tablet) {
        top: calc(($header-padding-tablet-gutter * 2) * -1) + 2px;
    }

    @include mq($phablet) {
        top: calc(($header-padding-phablet-gutter * 2) * -1) - 2px;
    }
}